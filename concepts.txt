                              React Intrview Questions🚀💥

  🛑 Dom vs virtual dom vs shadow dom

  ➖ Dom
  DOM stands for document object model.
  as it models the entire html document in an object and thus to access those properties we use method like document.querySelector or etc..

  ➖ Virtual dom
  Virtual dom is replica/copy of existing dom, It can be updated without affecting original dom.
  Any changes is being done anywhere in the dom, it is compared to find a defference thus only those parts of the application are rerendered, instead of re render the entire dom.

  both Virtual DOM and Shadow DOM improve performance for further manipulation processes.

  ➖ Shadow dom
  It revolves around the concept of encapsulation.the shadow DOM is a browser technology whose main objective is to provide encapsulation when creating elements
  In the Shadow DOM, all the elements are connected to the Shadow Root and Shadow HOST.
  It is the mechanism that binds the code together, and it manipulates the data.
 

  Encapsulation = is defined as the wrapping up of data under a single unit.



  🛑  package.json vs package-lock.json

  ➖ package.json
  package.json is a versioning file used to install multiple packages in your project.
  a package.json file contains metadata about the project and also the functional dependencies that is required by the application.
  for creating package.json -  npm init -y

  ➖ package-lock.json
  package.lock.json is created for locking the dependency with the installed version. It will install the exact latest version of that package in your application and save it in package.json.
   Let’s say if the current version of the package is 1.3.2 then it will save the version with (^) sign. Here carot(^) means, it will support any higher version with major version 1 for eg. 1.2.2.


🛑 Library vs framework

  framework is a collection of libraries , it supposts the mvc(model view controller) pattern.

  Libraries provide developers with predefined functions and classes to make their work easier and boost the development process. Good code quality, reusability, and control, enhanced speed and performance of the program, etc.


🛑 Components 
Components means we can create a pieces of our code, 
e.g header,navbar etc.
we can use one component in to the another component,
Components are reusable.
      

🛑 Types of components
There are 2 types of components.
1. Functional component
2. Class component

🛑 Difference between Functional component and class component.

➖ Functional components
1. Functional Components are known as state less component, but after react version 16.8 we can handle the state using hooks and we can also implement the logic.
2. There is no render method used in functional components.
3. We can not use lifecycle methods in functional component.
4. In functional component receives props as parameter in function definition.
5. After hooks concept function component maintain their own private data with the help of hooks.

➖ Class components
1. Class components are known as "smart" or "stateful" components because they implement logic and state.
2. render() method used in class component.
3. We use lifecycle methods in class component. (e.g componentDidMount , componentDidUpdate etc.)
4. In class component we access the props like this.props.
5. Class maintain their own private data with the help of state.


🛑 props
 Props stands for "properties",
 props is an object which holds the values of an attributes of tag,
 props are immutable, that means we can not change the value of props,
 props gives way to pass data from one component to another component.


 How to access props?
 Eg , suppose we have pass name as a prop.

 ➖In functional  "props.name",
 ➖In class component "this.props.name"


🛑 state
  State is an updatable structure that is used to contain data or information about component,The state in a component can changed over time, because of user actions.

  ◽ Defining state 
  ➖We define a state inside a constructor

  this.state ={
    name : "Adarsh"
  }

  ◽ for access
  {this.state.name}

  ◽ for update
  this.setState({name : "Rahul"})


  🛑 Difference between State and Props

  ➖ Props get passed to the component.
  〰 State is managed with in the component.

  ➖ Props are immutable.
  〰 State can be changed.

  ➖ Props In functional component => e.g props.name;
  〰 State In functional component => with the help of useState hooks

  ➖ Props In class component => e.g this.props.name;
  〰 State in class component => this.state


